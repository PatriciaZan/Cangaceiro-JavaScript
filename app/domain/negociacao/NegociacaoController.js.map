{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoController.js"],"names":["Negociacoes","NegociacoesView","Mensagem","MensagemView","NegociacaoService","getNegociacaoDao","DataInvalidaException","Negociacao","Bind","DateConverter","NegociacaoController","constructor","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_service","_negociacoes","_mensagem","mensagemView","_init","then","dao","listaTodos","negociacoes","forEach","negociacao","adiciona","catch","err","texto","event","preventDefault","_criaNegociacao","_limpaFormulario","console","log","stack","message","mensagem","importaNegociacoes","obterNegociacoesDaSemana","filter","novaNegociacao","paraArray","some","negociacaoExistente","equals","value","focus","paraData","parseInt","parseFloat","apaga","apagaTodos","esvazia"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import { Negociacoes } from '../domain/negociacao/Negociacoes.js'\r\n;\r\nimport { NegociacoesView } from '../ui/views/NegociacoesView.js';\r\nimport { Mensagem } from '../ui/models/Mensagem.js';\r\nimport { MensagemView } from '../ui/views/MensagemView.js';\r\nimport { NegociacaoService } from '../domain/negociacao/NegociacaoService.js';\r\n\r\nimport { getNegociacaoDao } from '../util/DaoFactory.js';\r\nimport { DataInvalidaException } from '../ui/converters/DataInvalidaException.js';\r\nimport { Negociacao } from '../domain/negociacao/Negociacao.js';\r\nimport { Bind } from '../util/Bind.js';\r\nimport { DateConverter } from '../ui/converters/DateConverter.js';\r\n\r\nexport class NegociacaoController {\r\n\r\n    constructor(){\r\n        const $ = document.querySelector.bind(document);\r\n\r\n        this._inputData = $('#data');\r\n        this._inputQuantidade = $('#quantidade');\r\n        this._inputValor = $('#valor');\r\n\r\n        this._service = new NegociacaoService();\r\n\r\n        // Com auxilio do ProxyFactory\r\n        this._negociacoes = new Bind(\r\n            new Negociacoes(),\r\n            new NegociacoesView('#negociacoes'),\r\n            'adiciona', 'esvazia'\r\n        );\r\n        /*\r\n        this._negociacoesView = new NegociacoesView('#negociacoes');\r\n        this._negociacoesView.update(this._negociacoes);\r\n        */\r\n        this._mensagem = new Bind(\r\n            new Mensagem(),\r\n            new mensagemView('#mensagemView'),\r\n            'texto'\r\n        );\r\n\r\n        /*\r\n        this._mensagemView = new mensagemView('#mensagemView');\r\n        this._mensagemView.update(this._mensagem);\r\n        */\r\n        this._init();\r\n    }\r\n    _init(){\r\n\r\n        \r\n        getNegociacaoDao()\r\n        .then(dao => dao.listaTodos())\r\n        .then(negociacoes => \r\n            negociacoes.forEach(negociacao =>\r\n                this._negociacoes.adiciona(negociacao)))\r\n        .catch(err => this._mensagem.texto = err);\r\n    };\r\n\r\n\r\n    adiciona(event){\r\n        event.preventDefault();\r\n        try{\r\n\r\n            //DaoFactory add\r\n            const negociacao = this._criaNegociacao();\r\n\r\n            //DaoFactory\r\n                getNegociacaoDao()\r\n                .then(dao => dao.adiciona(negociacao))\r\n                .then(() => {\r\n                    this._negociacoes.adiciona(negociacao);\r\n                    this._mensagem.texto = 'Negociação adicionada com sucesso';\r\n                    this._limpaFormulario();\r\n                })\r\n                .catch(err => this._mensagem.texto = err);\r\n\r\n            //this._negociacoes.adiciona(this._criaNegociacao());\r\n            //this._mensagem.texto = 'Negociação adicionada com sucesso';\r\n            //this._limpaFormulario();// limpando o formulario\r\n        } catch(err){\r\n            console.log(err);\r\n            console.log(err.stack);\r\n            this._mensagem.texto = err.message;\r\n            if(err instanceof DataInvalidaException){\r\n                this._mensagem.texto = err.mensagem;\r\n            } else{\r\n                this._mensagem.texto = 'Um ero não esperado aconteceu. Entre em contato com o suporte'\r\n            }\r\n            \r\n        }\r\n\r\n        //this._negociacoesView.update(this._negociacoes);\r\n        //console.log(this._negociacoes);\r\n        //this._mensagemView.update(this._mensagem); // atualiza a view \r\n    }\r\n\r\n    importaNegociacoes(){\r\n        //const promise = this._service.obterNegociacoesDaSemana();\r\n        /*\r\n        const negociacoes = [];\r\n\r\n        this._service\r\n            .obterNegociacoesDaSemana()\r\n            .then(semana => {\r\n                negociacoes.push(...semana);\r\n                return this._service.obterNegociacoesDaSemanaAnterior();\r\n            })\r\n            .then(anterior => {\r\n                negociacoes.push(...anterior);\r\n                negociacoes.forEach(negociacao => this._negociacoes.adiciona(negociacao));\r\n                this._mensagem.texto = 'Negociações importadas com sucesso';\r\n            })\r\n            .catch(err => this._mensagem.texto = err);\r\n        */\r\n            \r\n        this._service\r\n        .obterNegociacoesDaSemana()\r\n        .then(negociacoes => {\r\n            negociacoes.filter(novaNegociacao => \r\n                !this._negociacoes.paraArray().some(negociacaoExistente =>\r\n                    novaNegociacao.equals(negociacaoExistente)))\r\n        .forEach(negociacao => this._negociacoes.adiciona(negociacao));\r\n            this._mensagem.texto = 'Negociações importadas com sucesso';\r\n        })\r\n        .catch(err => this._mensagem.texto = err);\r\n\r\n        /*\r\n        this._service.obterNegociacoesDaSemana();\r\n\r\n        if(err) {\r\n            this._mensagem.texto = 'Não foi possível obter as negociações da semana';\r\n            return;\r\n            }\r\n\r\n            negociacoes.forEach(negociacao =>\r\n                this._negociacoes.adiciona(negociacao));\r\n                this._mensagem.texto = 'Negociações importadas com sucesso';\r\n    */\r\n        \r\n    }\r\n\r\n    _limpaFormulario() {\r\n        this._inputData.value = '';\r\n        this._inputQuantidade.value = 1;\r\n        this._inputValor.value = 0.0;\r\n        this._inputData.focus();\r\n    }\r\n\r\n    _criaNegociacao(){\r\n        return new Negociacao(\r\n            DateConverter.paraData(this._inputData.value),\r\n            parseInt(this._inputQuantidade.value),\r\n            parseFloat(this._inputValor.value)\r\n        );\r\n    }\r\n\r\n    apaga(){\r\n        //DaoFactory\r\n            getNegociacaoDao()\r\n            .then(dao => dao.apagaTodos())\r\n            .then(() => {\r\n                this._negociacoes.esvazia();\r\n                this._mensagem.texto = 'Negociações apagadas com sucesso';\r\n            })\r\n            .catch(err => this._mensagem.texto = err);\r\n\r\n        //this._negociacoes.esvazia();\r\n        //this._negociacoesView.update(this._negociacoes);\r\n        //this._mensagem.texto = 'Negociações apagadas com sucesso';\r\n        //this._mensagemView.update(this._mensagem);\r\n    }\r\n}\r\n        \r\n    \r\n\r\n    \r\n// Codigo Removido\r\n\r\n/*\r\n        const xhr = new XMLHttpRequest();\r\n        xhr.open('GET', 'negociacoes/semana');\r\n\r\n        xhr.onreadystatechange = () => {\r\n            if(xhr.readyState == 4){\r\n                if(xhr.status == 200){\r\n                    JSON\r\n                    .parse(xhr.responseText)\r\n                    .map(objeto => new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor))\r\n                    .forEach(negociacao => this._negociacoes.adiciona(negociacao));\r\n                    this._mensagem.texto = 'Negociações importadas com sucesso!';\r\n\r\n                    //console.log('Obtendo as negociações do servidor.');\r\n                    //console.log(JSON.parse(xhr.responseText));\r\n                } else {\r\n                    console.log(xhr.responseText);\r\n                    this._mensagem.texto = 'Não foi possível obter as negociações da semana.';\r\n                }\r\n            }\r\n        };\r\n        xhr.send();\r\n        */\r\n\r\n//Proxy\r\n        /*\r\n        // referencia para a instancia de NegociacaoController\r\n        const self = this;\r\n\r\n        this._negociacoes = new Proxy(new Negociacoes(), {\r\n            get (target, prop, receiver){\r\n                if(typeof(target[prop]) == typeof(Function) && ['adiciona', 'esvazia']\r\n                    .includes(prop)){\r\n                        return function(){\r\n                            console.log(`\"${prop}\" disparou a armadilha`);\r\n                            target[prop].apply(target, arguments)\r\n                            self._negociacoesView.update(target);\r\n                        }\r\n                    } else{\r\n                        return target[prop];\r\n                    }\r\n            }\r\n        });\r\n        */\r\n\r\n        // self é a negociacaoController\r\n        //const self = this;\r\n        /*\r\n        this._negociacoes = new Negociacoes(model => {\r\n            console.log(this);\r\n            this._negociacoesView.update(model);\r\n        });\r\n        */\r\n\r\n\r\n/* let inputData = document.querySelector('#data');\r\n        // let inputQuantidade = document.querySelector('#quantidade');\r\n        // let inputValor = document.querySelector('#valor');\r\n        /*\r\n        console.log(this._inputData.value);\r\n        console.log(parseInt(this._inputQuantidade.value));\r\n        console.log(parseFloat(this._inputValor.value));\r\n        \r\n        // 2\r\n        let negociacao = new Negociacao(\r\n            this._inputData.value,\r\n            parsenInt(this._inputQuantidade.value),\r\n            parseFloat(this._inputValor.value)\r\n        )\r\n        \r\n        //console.log(negociacao.data);\r\n\r\n        // 3\r\n        let data = new Date(...\r\n            this._inputData.value\r\n            .split('-')\r\n            .map((item, indice) =>  item - indice % 2)\r\n        );\r\n        \r\n        //console.log(data);\r\n\r\n        // 4\r\n        let converter = new DateConverter();\r\n        let data = converter.paraData(this._inputData.value);\r\n            \r\n        let negociacao = new Negociacao(\r\n            DateConverter.paraData(this._inputData.value),\r\n            parseInt(this._inputQuantidade.value),\r\n            parseFloat(this._inputValor.value)\r\n        )\r\n        \r\n        this._negociacoes.adiciona(negociacao);\r\n        console.log(this._negociacoes.paraArray());\r\n        \r\n        let diaMesAno = converter.paraTexto(negociacao.data);\r\n        console.log(diaMesAno);;\r\n        \r\n        // Apagar a lista\r\n        this._negociacoes.paraArray().length = 0;\r\n        //\r\n        console.log(this._negociacoes.paraArray());\r\n*/"]}